#
# prlpks configuration file
#

[prlpks]
logfile="./prlpks.log"

### HTTP Keyserver Protocol settings
[prlpks.hkp]
bind=":11371"
webroot="/var/lib/prlpks/www"
 
### OpenPGP service settings
[prlpks.openpgp]
# Set verifySigs=true to capture the signature verification state
# in signature packet records. This can be used to improve the
# quality of the keyserver results, but it requires more CPU.
verifySigs=false
# Number of workers that will concurrently load key material into
# the database & prefix tree. Default is # of detected cores.
#nworkers=8

### OpenPGP database connection
[prlpks.openpgp.db]
# Currently, the only supported database/sql driver is postgres.
driver="postgres"
# The default data source name connects through a local socket
# to a database 'hkp' owned by the effective user.You can change dbname also.
#if you can not directly connect to postgresql with the executing user then use following dsn.
#Replace username and password with real username and password
#dsn="dbname=hkp user=<dbadminusername> password=<dbadminpassword> host=/var/run/postgresql sslmode=disable"
dsn="dbname=hkp host=/var/run/postgresql sslmode=disable"


### SKS Reconciliation Protocol for OpenPGP
[symflux.recon]
# SKS recon listen port
reconPort=11370
# HTTP port reported to peer. This must match the port specified for
# prlpks.hkp.bind, or else it must be port-forwarded to be accessible
# to the recon peer.
httpPort=11371
# List of peers prlpks will gossip with, it is given in the form address:port
#By default every PKS reconciles on port 11371 but one should first ask admin of the other server before assuming anything 
#e.g. if you have two parteners then
#partners=["germanypks.de:11370","britainpks.gb:11370"]
partners=[]
# SKS filters, which must match your peers' configuration
filters=["yminsky.dedup"]

### SKS Recon prefix tree,which will store synchorinizing tree of whole database
[symflux.recon.leveldb]
path="./recon-ptree"

### OpenPGP PKS mail synchronization
#[prlpks.openpgp.pks]
## Send keys to these PKS servers
#to=["pgp-public-keys@other1.example.com","pgp-public-keys@other2.example.com"]
## PKS sync mail from: address
#from="pgp-public-keys@yourhost.yourdomain.com"

### Custom SMTP settings for sending PKS mail. Default is host="localhost:25".
#[prlpks.openpgp.pks.smtp]
#host="smtp.gmail.com:587"  # SMTP hostname:port
#user="googly.user"  # SMTP account username, if necessary
#pass="googly.pass"  # SMTP account password



#### PRC Start

###Authority of this peer,i.e. details about domains under authority of this peer
[authority]
## HKP Address of ourserver
ownAddr="localhost:11371"
##E-mail address of this server owner,Public Key should also have the same email id
email="admin@example.com"
##Domains that are currently under authority of this server
#e.g. domainsUnderAuth=["gmail.com","hotmail.com"]
domainsUnderAuth=["gmail.com","hotmail.com"]
##Path of the Ascii Armored Public Key of this domain 
pubKeyPath="./adminPublickey.pub"
##Path of the Ascii Armored Private Key of this domain 
priKeyPath="./adminPrivateKey.asc"
##Password of private key
priPwd="secretpassword"
##LifeTime of signature in days,0 means never expire
sigLifeTime=0
##Path to store allCurrState
stateFile="./AllStatesFile.json"

###Mailer Config
##mailerHost is the address:port of the smtp server,similarly imap
mailerHost="mail.example.com:587"  # SMTP hostname:port
imapHost="smtp.example.com:993" #IMAP hostname:port
##mailerUser is the account name through which email will be sent/received,
#some mail servers do not allow login with full email address
#e.g. admin@example.com may fail while logging in smtp/imap because only 'admin' is allowed. set mailerUser accordingly.
mailerUser="admin@example.com"  
#mailerPass is password of the above user
mailerPass="mailpassword"  
#Frequency in Seconds for checking inbox of above account,if not set then default is 2*60=2 minutes
imapFreq=60 
#Name of the folder where mails will be moved after processing them,Default is processed
procFolder="processed"
##mailerSender is the name that will appear in the from Field of the email 
#and is authorized to send emails on behalf of above mailerUser
mailerSender="admin@example.com"

##String to add in TXT Record of domainsUnderAuth;Contact owner of the domains 
#pks=address of pks server<space>Fingerprint of Pubkey of PKS<space>time of upload in seconds from unix epoch 1970
#For this config tell admin of gmail.com and hotmail.com to add following TXT records in their DNS record
#pks=indiapks.in C76B61926E48BD9B0083AD3DC9EDF7C933E38B0C 1396424167

##ExplicitAuthFile is the path of the json file where one can explicitly add email addresses which he explicitly wants to handle using this server.
#If this server is not authorized in DNS of email domain then the explicitly authorized emails will not be reconciled.
#json can also contain regular expresions(same as accepted by vim) to add multiple email addresses using one entry only.
ExplicitAuthFile=./explicitAuth.json

##Delegate Settings,Please note that it is used only for forwarding search querries 
##We can NOT trust all the keys coming rom this delegate server as we have not verified it.
#Weather to delegate to other PKS if key is not found on server
delegateToPKS=true
#Server to which we will delgate querries,if not set then default is "pool.sks-keyservers.net:11371"
delegateAddress="pool.sks-keyservers.net:11371"

#### PRC End