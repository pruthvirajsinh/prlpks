prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:39:14 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:39:14 prc_authority.go:246: TXT of prl.res.in : v=spf1 mx a:webmail.prl.res.in -all
prlpks2014/04/25 15:39:14 prc_authority.go:251: pks not found in TXT Record of prl.res.in
prlpks2014/04/25 15:39:14 prc_CurrState.go:142: TXT Record of domain prl.res.indoesnt contain valid pksAuth Record
prlpks2014/04/25 15:39:14 recon.go:82: Error updating Own Local State
prlpks2014/04/25 15:39:40 add.go:53: add.go: Found a key from request!! =  ee8813259c1b0b4e
prlpks2014/04/25 15:39:40 add.go:78: add.go:Request has New Key (ID):  25590fac3c8bf5c43039884dee8813259c1b0b4e
prlpks2014/04/25 15:39:40 prc_verifier.go:65: >>>>>>>>>>>> gtuprc@gmail.com <<<<<<<<<<<<<<
prlpks2014/04/25 15:39:40 prc_verifier.go:66: Verifier.go:Time of request Apr 25 15:39:40.978614267
prlpks2014/04/25 15:39:40 prc_verifier.go:94: OTL NOT FOUND!!
prlpks2014/04/25 15:39:40 prc_verifier.go:147: verifier.go:otl_hash of above request is: 0d698e6c7a6ac3a52ec6f2f98d5557d8d9650f43720f671d823ca94d9d7ebf1986fcf0ee0d54207906484e865c658bc2
prlpks2014/04/25 15:39:40 prc_verifier.go:148: verifier.go:Calling Send mail with gtuprc@gmail.com 0d698e6c7a6ac3a52ec6f2f98d5557d8d9650f43720f671d823ca94d9d7ebf1986fcf0ee0d54207906484e865c658bc2
prlpks2014/04/25 15:39:40 worker.go:339: keyword: gtuprc@gmail.com
prlpks2014/04/25 15:39:40 worker.go:340: limit: 2
prlpks2014/04/25 15:39:41 prc_mailer.go:102: mailer.go:Sending mail to gtuprc@gmail.com
prlpks2014/04/25 15:39:41 add.go:81: add.go:Is Requested Key Verified??:  false
prlpks2014/04/25 15:39:41 worker.go:339: keyword: gtuprc@gmail.com
prlpks2014/04/25 15:39:41 worker.go:340: limit: 2
prlpks2014/04/25 15:39:41 add.go:201: OTL NOT FOUND!!
prlpks2014/04/25 15:39:54 worker.go:339: keyword: prc
prlpks2014/04/25 15:39:54 worker.go:340: limit: 100
prlpks2014/04/25 15:40:06 add.go:53: add.go: Found a key from request!! =  221a87d99a615f59
prlpks2014/04/25 15:40:06 add.go:90: add.go:request doesnt make change to key(id) :  e3dff255f73508da976c9772221a87d99a615f59
prlpks2014/04/25 15:40:14 imap.go:604: Running for user 'keyserver' on IMAP server 'prlmail.lan.prl.res.in:10943'
prlpks2014/04/25 15:40:15 imap.go:662: 0 UIDs total, 0 jobs of size <= 5
prlpks2014/04/25 15:40:15 imap.go:678: Finished fetching 0 messages in 0.00s (+Infms per message; 0.0 messages per second)
prlpks2014/04/25 15:40:15 imap.go:436: Starting Marking for user 'keyserver' on IMAP server 'prlmail.lan.prl.res.in:10943'
prlpks2014/04/25 15:40:15 imap.go:486: Marking: 0 UIDs with \SEEN total, 0 jobs of size <= 20 from inbox
prlpks2014/04/25 15:40:15 imap.go:506: Finished Marking 0 messages in 0.00s (+Infms per message; 0.0 messages per second)
prlpks2014/04/25 15:40:15 imap.go:232: Starting Moving for user 'keyserver' on IMAP server 'prlmail.lan.prl.res.in:10943'
prlpks2014/04/25 15:40:15 imap.go:302: Moving: 0 UIDs total, 0 jobs of size <= 20 to processed
prlpks2014/04/25 15:40:15 imap.go:334: Finished Moving 0 messages in 0.00s (+Infms per message; 0.0 messages per second)
prlpks2014/04/25 15:40:15 prc_mailer.go:270: CheckIMAP: Processed  0  emails out of  0
prlpks2014/04/25 15:40:16 worker.go:339: keyword: prcdummy1@gmail.com
prlpks2014/04/25 15:40:16 worker.go:340: limit: 2
prlpks2014/04/25 15:41:14 imap.go:604: Running for user 'keyserver' on IMAP server 'prlmail.lan.prl.res.in:10943'
prlpks2014/04/25 15:41:17 imap.go:662: 0 UIDs total, 0 jobs of size <= 5
prlpks2014/04/25 15:41:17 imap.go:678: Finished fetching 0 messages in 0.00s (+Infms per message; 0.0 messages per second)
prlpks2014/04/25 15:41:17 imap.go:436: Starting Marking for user 'keyserver' on IMAP server 'prlmail.lan.prl.res.in:10943'
prlpks2014/04/25 15:41:18 imap.go:486: Marking: 0 UIDs with \SEEN total, 0 jobs of size <= 20 from inbox
prlpks2014/04/25 15:41:18 imap.go:506: Finished Marking 0 messages in 0.00s (+Infms per message; 0.0 messages per second)
prlpks2014/04/25 15:41:18 imap.go:232: Starting Moving for user 'keyserver' on IMAP server 'prlmail.lan.prl.res.in:10943'
prlpks2014/04/25 15:41:18 imap.go:302: Moving: 0 UIDs total, 0 jobs of size <= 20 to processed
prlpks2014/04/25 15:41:18 imap.go:334: Finished Moving 0 messages in 0.00s (+Infms per message; 0.0 messages per second)
prlpks2014/04/25 15:41:18 prc_mailer.go:270: CheckIMAP: Processed  0  emails out of  0
prlpks2014/04/25 15:42:14 imap.go:604: Running for user 'keyserver' on IMAP server 'prlmail.lan.prl.res.in:10943'
prlpks2014/04/25 15:42:14 imap.go:662: 0 UIDs total, 0 jobs of size <= 5
prlpks2014/04/25 15:42:14 imap.go:678: Finished fetching 0 messages in 0.00s (+Infms per message; 0.0 messages per second)
prlpks2014/04/25 15:42:14 imap.go:436: Starting Marking for user 'keyserver' on IMAP server 'prlmail.lan.prl.res.in:10943'
prlpks2014/04/25 15:42:15 imap.go:486: Marking: 0 UIDs with \SEEN total, 0 jobs of size <= 20 from inbox
prlpks2014/04/25 15:42:15 imap.go:506: Finished Marking 0 messages in 0.00s (+Infms per message; 0.0 messages per second)
prlpks2014/04/25 15:42:15 imap.go:232: Starting Moving for user 'keyserver' on IMAP server 'prlmail.lan.prl.res.in:10943'
prlpks2014/04/25 15:42:15 imap.go:302: Moving: 0 UIDs total, 0 jobs of size <= 20 to processed
prlpks2014/04/25 15:42:15 imap.go:334: Finished Moving 0 messages in 0.00s (+Infms per message; 0.0 messages per second)
prlpks2014/04/25 15:42:15 prc_mailer.go:270: CheckIMAP: Processed  0  emails out of  0
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:45:44 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:45:44 prc_authority.go:246: TXT of prl.res.in : v=spf1 mx a:webmail.prl.res.in -all
prlpks2014/04/25 15:45:44 prc_authority.go:251: pks not found in TXT Record of prl.res.in
prlpks2014/04/25 15:45:44 prc_CurrState.go:142: TXT Record of domain prl.res.indoesnt contain valid pksAuth Record
prlpks2014/04/25 15:45:44 recon.go:82: Error updating Own Local State
prlpks2014/04/25 15:45:50 worker.go:339: keyword: prcdummy1@gmail.com
prlpks2014/04/25 15:45:50 worker.go:340: limit: 2
prlpks2014/04/25 15:45:50 prc_verifier.go:65: >>>>>>>>>>>> prcdummy1@gmail.com <<<<<<<<<<<<<<
prlpks2014/04/25 15:45:50 prc_verifier.go:66: Verifier.go:Time of request Apr 25 15:45:50.392718703
prlpks2014/04/25 15:45:50 prc_verifier.go:231: Sha256 matched!! true
prlpks2014/04/25 15:45:50 prc_verifier.go:232: key id matched!! true
prlpks2014/04/25 15:45:50 prc_verifier.go:103: OTL Expired!!
prlpks2014/04/25 15:45:50 prc_verifier.go:147: verifier.go:otl_hash of above request is: 981dc6f76ca813fca7e023ac4c429dba22f416234d6faab7e0cb6fd49698a227b7040c6dea6b1f0cba0acfbe3ff21422
prlpks2014/04/25 15:45:50 prc_verifier.go:148: verifier.go:Calling Send mail with prcdummy1@gmail.com 981dc6f76ca813fca7e023ac4c429dba22f416234d6faab7e0cb6fd49698a227b7040c6dea6b1f0cba0acfbe3ff21422
prlpks2014/04/25 15:45:50 prc_mailer.go:102: mailer.go:Sending mail to prcdummy1@gmail.com
prlpks2014/04/25 15:46:44 imap.go:604: Running for user 'keyserver' on IMAP server 'prlmail.lan.prl.res.in:10943'
prlpks2014/04/25 15:46:45 imap.go:662: 0 UIDs total, 0 jobs of size <= 5
prlpks2014/04/25 15:46:45 imap.go:678: Finished fetching 0 messages in 0.00s (+Infms per message; 0.0 messages per second)
prlpks2014/04/25 15:46:45 imap.go:436: Starting Marking for user 'keyserver' on IMAP server 'prlmail.lan.prl.res.in:10943'
prlpks2014/04/25 15:46:45 imap.go:486: Marking: 0 UIDs with \SEEN total, 0 jobs of size <= 20 from inbox
prlpks2014/04/25 15:46:45 imap.go:506: Finished Marking 0 messages in 0.00s (+Infms per message; 0.0 messages per second)
prlpks2014/04/25 15:46:45 imap.go:232: Starting Moving for user 'keyserver' on IMAP server 'prlmail.lan.prl.res.in:10943'
prlpks2014/04/25 15:46:45 imap.go:302: Moving: 0 UIDs total, 0 jobs of size <= 20 to processed
prlpks2014/04/25 15:46:45 imap.go:334: Finished Moving 0 messages in 0.00s (+Infms per message; 0.0 messages per second)
prlpks2014/04/25 15:46:45 prc_mailer.go:270: CheckIMAP: Processed  0  emails out of  0
prlpks2014/04/25 15:47:44 imap.go:604: Running for user 'keyserver' on IMAP server 'prlmail.lan.prl.res.in:10943'
prlpks2014/04/25 15:47:45 imap.go:662: 0 UIDs total, 0 jobs of size <= 5
prlpks2014/04/25 15:47:45 imap.go:678: Finished fetching 0 messages in 0.00s (+Infms per message; 0.0 messages per second)
prlpks2014/04/25 15:47:45 imap.go:436: Starting Marking for user 'keyserver' on IMAP server 'prlmail.lan.prl.res.in:10943'
prlpks2014/04/25 15:47:45 imap.go:486: Marking: 0 UIDs with \SEEN total, 0 jobs of size <= 20 from inbox
prlpks2014/04/25 15:47:45 imap.go:506: Finished Marking 0 messages in 0.00s (+Infms per message; 0.0 messages per second)
prlpks2014/04/25 15:47:45 imap.go:232: Starting Moving for user 'keyserver' on IMAP server 'prlmail.lan.prl.res.in:10943'
prlpks2014/04/25 15:47:45 imap.go:302: Moving: 0 UIDs total, 0 jobs of size <= 20 to processed
prlpks2014/04/25 15:47:45 imap.go:334: Finished Moving 0 messages in 0.00s (+Infms per message; 0.0 messages per second)
prlpks2014/04/25 15:47:45 prc_mailer.go:270: CheckIMAP: Processed  0  emails out of  0
prlpks2014/04/25 15:48:44 imap.go:604: Running for user 'keyserver' on IMAP server 'prlmail.lan.prl.res.in:10943'
prlpks2014/04/25 15:48:45 imap.go:662: 0 UIDs total, 0 jobs of size <= 5
prlpks2014/04/25 15:48:45 imap.go:678: Finished fetching 0 messages in 0.00s (+Infms per message; 0.0 messages per second)
prlpks2014/04/25 15:48:45 imap.go:436: Starting Marking for user 'keyserver' on IMAP server 'prlmail.lan.prl.res.in:10943'
prlpks2014/04/25 15:48:45 imap.go:486: Marking: 0 UIDs with \SEEN total, 0 jobs of size <= 20 from inbox
prlpks2014/04/25 15:48:45 imap.go:506: Finished Marking 0 messages in 0.01s (+Infms per message; 0.0 messages per second)
prlpks2014/04/25 15:48:45 imap.go:232: Starting Moving for user 'keyserver' on IMAP server 'prlmail.lan.prl.res.in:10943'
prlpks2014/04/25 15:48:45 imap.go:302: Moving: 0 UIDs total, 0 jobs of size <= 20 to processed
prlpks2014/04/25 15:48:45 imap.go:334: Finished Moving 0 messages in 0.01s (+Infms per message; 0.0 messages per second)
prlpks2014/04/25 15:48:45 prc_mailer.go:270: CheckIMAP: Processed  0  emails out of  0
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey (
-----------------------------------------------------------------------
-- Full public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Creation time of this public key fingerprint in the database
ctime TIMESTAMP WITH TIME ZONE NOT NULL,
-- Last-modified time of this public key fingerprint in the database
mtime TIMESTAMP WITH TIME ZONE NOT NULL,
-- MD5 digest of the entire public key contents, compatible with SKS
md5 TEXT NOT NULL,
-- SHA256 digest of the entire public key contents, using same method
sha256 TEXT NOT NULL,
-- Reference to a revocation on this primary key
revsig_uuid TEXT,
-- Reference to the primary User ID
primary_uid TEXT,
-- Reference to the primary User Attribute
primary_uat TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL,
-----------------------------------------------------------------------
-- Unsupported key material aggregated here
unsupp bytea
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_sig (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- Signature creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Signature expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Signature type, RFC 4880, Section 5.2.1
sig_type INTEGER NOT NULL,
-- Key ID (16-character prefix of the public key rfingerprint)
signer TEXT NOT NULL,
-- Matched reference to the signer in *this* database, if found
signer_uuid TEXT,
-- Reference to a revocation on this signature, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey (
-----------------------------------------------------------------------
-- Sub-key public key fingerprint, LSB-to-MSB, lowercased hex
uuid TEXT NOT NULL,
-- Public key creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- Public key expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Primary public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this sub key, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Public-key algorithm, RFC 4880, Section 9.1
algorithm INTEGER NOT NULL,
-- Public-key bit length
bit_len INTEGER NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT NOT NULL,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT,
-----------------------------------------------------------------------
-- Original text of the user identity string
keywords TEXT NOT NULL,
-- Tokenized, fulltext searchable index
keywords_fulltext tsvector NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User attribute creation timestamp. Since this packet lacks a field
-- for creation time, the earliest self-signature timestamp is used here.
creation TIMESTAMP WITH TIME ZONE NOT NULL,
-- User attribute expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record
state INTEGER NOT NULL DEFAULT 0,
-- Binary contents of the OpenPGP packet
packet bytea,
-----------------------------------------------------------------------
-- Public key to which this identity belongs
pubkey_uuid TEXT,
-- Reference to a revocation signature on this identity, if any
revsig_uuid TEXT
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_pubkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key that is signed
pubkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_subkey_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the subkey belongs
pubkey_uuid TEXT NOT NULL,
-- Sub key that is signed
subkey_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uid_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- User ID that is signed
uid_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS openpgp_uat_sig (
-----------------------------------------------------------------------
-- Universally-unique identifer
uuid TEXT NOT NULL,
-- Public key to which the UID
pubkey_uuid TEXT NOT NULL,
-- UID that is signed
uat_uuid TEXT NOT NULL,
-- Signature
sig_uuid TEXT NOT NULL
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS pks_status (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
uuid TEXT NOT NULL,
-- User ID creation timestamp
creation TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-- User ID expiration timestamp (if any)
expiration TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT '9999-12-31 23:59:59+00',
-- State flag for this record. Nonzero disables.
state INTEGER NOT NULL DEFAULT 0,
-----------------------------------------------------------------------
-- Email address receiving PKS mail from this host
email_addr TEXT NOT NULL,
-- Last sync timestamp for this address
last_sync TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
-----------------------------------------------------------------------
PRIMARY KEY (uuid),
UNIQUE (email_addr)
)
prlpks2014/04/25 15:49:06 db.go:45: 
CREATE TABLE IF NOT EXISTS verify_email (
-----------------------------------------------------------------------
-- Scope- and content-unique identifer
req_email TEXT NOT NULL,
-- Sha256 Hash of the key kto check weather key has been changed since last request
hash_pubkey TEXT NOT NULL,
-- Binary contents of the OpenPGP packet
packet bytea NOT NULL,
-- otl_hash Salted Hash with random input
otl_hash TEXT NOT NULL,
-- Verification Request creation timestamp
req_time TIMESTAMP WITH TIME ZONE NOT NULL,
-- OTL Verification timestamp
veri_time TIMESTAMP WITH TIME ZONE,
-- OTL_Hash Expiration time (creation Time + 2 days)
expi_time TIMESTAMP WITH TIME ZONE NOT NULL,
--Weather verified or not Boolean
is_verified BOOLEAN NOT NULL,
-- armored text of hkp/add request
key_text TEXT NOT NULL,
-- Reference to the RFC 4880 ID (Fingerprint) of requested public key
pubkey_id TEXT NOT NULL,
--Operation,weather otl is being called for addition or deletion
operation SMALLINT NOT NULL,
----------------------------
PRIMARY KEY (hash_pubkey)

)
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_md5 UNIQUE (md5);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_sha256 UNIQUE (sha256);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_revsig_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_signer_fk FOREIGN KEY (signer_uuid)
	REFERENCES openpgp_pubkey(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_sig ADD CONSTRAINT openpgp_sig_rev_fk FOREIGN KEY (revsig_uuid)
	REFERENCES openpgp_sig(uuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey ADD CONSTRAINT openpgp_subkey_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_subkey_pubkey ON openpgp_subkey (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uid_fk
	FOREIGN KEY (primary_uid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid ADD CONSTRAINT openpgp_uid_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uid_pubkey ON openpgp_uid (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uid_fulltext_idx ON openpgp_uid USING gin(keywords_fulltext);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey ADD CONSTRAINT openpgp_pubkey_primary_uat_fk
	FOREIGN KEY (primary_uat) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat ADD CONSTRAINT openpgp_uat_rev_fk
	FOREIGN KEY (revsig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: CREATE INDEX openpgp_uat_pubkey ON openpgp_uat (pubkey_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_unique
	UNIQUE (pubkey_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_pubkey_sig ADD CONSTRAINT openpgp_pubkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_unique
	UNIQUE (subkey_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_subkey_fk
	FOREIGN KEY (subkey_uuid) REFERENCES openpgp_subkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_subkey_sig ADD CONSTRAINT openpgp_subkey_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_unique
	UNIQUE (uid_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_uid_fk
	FOREIGN KEY (uid_uuid) REFERENCES openpgp_uid(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uid_sig ADD CONSTRAINT openpgp_uid_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pk PRIMARY KEY (uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_unique
	UNIQUE (uat_uuid, sig_uuid);
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_pubkey_fk
	FOREIGN KEY (pubkey_uuid) REFERENCES openpgp_pubkey(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_uat_fk
	FOREIGN KEY (uat_uuid) REFERENCES openpgp_uat(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 db.go:92: ALTER TABLE openpgp_uat_sig ADD CONSTRAINT openpgp_uat_sig_sig_fk
	FOREIGN KEY (sig_uuid) REFERENCES openpgp_sig(uuid)
	ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
prlpks2014/04/25 15:49:06 prc_authority.go:246: TXT of prl.res.in : v=spf1 mx a:webmail.prl.res.in -all
prlpks2014/04/25 15:49:06 prc_authority.go:251: pks not found in TXT Record of prl.res.in
prlpks2014/04/25 15:49:06 prc_CurrState.go:142: TXT Record of domain prl.res.indoesnt contain valid pksAuth Record
prlpks2014/04/25 15:49:06 recon.go:82: Error updating Own Local State
